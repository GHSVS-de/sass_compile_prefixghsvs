{
  "name": "sass_compile_prefixghsvs",
  "description": "Kompilieren und autoprefixen von scss in Template. Multiprojekt-Version.",
  "version": "2020.01.14",
  "GitHubProjectUrl": "https://github.com/GHSVS-de/sass_compile_prefixghsvs",
  "Console start": "cd /mnt/z/git-kram/sass_compile_prefixghsvs",
  "versionTxt": "2020-01-14T21:52:15+0100",
  "DIR": {
    "scss": "/mnt/z/_jobs/ghsvs-de-relaunch-bs3/templates/bs4ghsvs/scss",
    "target": "/mnt/z/_jobs/ghsvs-de-relaunch-bs3/templates/bs4ghsvs",
    "project": "/mnt/z/git-kram/sass_compile_prefixghsvs/p_relaunch-bs3.ghsvs.de",
    "projectName": "p_relaunch-bs3.ghsvs.de",
    "work": "ghs",
    "css": "css",
    "raw": "css-raw",
    "dist": "dist"
  },
  "keywords": [
    "css",
    "sass",
    "autoprefixer",
    "web"
  ],
  "homepage": "https://www.ghsvs.de/",
  "author": "G@HService Berlin Neukölln, Volkmar Volli Schlothauer (ghsvs.de)",
  "contributors": [
    "G@HService Berlin Neukölln, Volkmar Volli Schlothauer (ghsvs.de)"
  ],
  "scripts": {
    "g-help": "bin/help.php",
    "g-help-real-paths": "bin/help.php -r",
    "g-npm-update-check": "ncu",
    "g-ncu-override-json": "ncu -u",
    "g-watch-local": "nodemon --watch $npm_package_DIR_scss/ --ext scss --exec \"npm run g-all-local\"",
    "g-watch": "nodemon --watch $npm_package_DIR_scss/ --ext scss --exec \"npm run g-all\"",
    "g-watch-upload": "nodemon --watch $npm_package_DIR_scss/ --ext scss --exec \"npm run g-all-upload\"",
    "g-all-local": "npm-run-all g-rm g-mkdirs g-compile g-copyRaw g-prefix g-minify g-version g-copyDist",
    "g-all": "npm-run-all g-all-local g-copyTarget",
    "g-all-upload": "npm-run-all g-all g-upload",
    "g-rm": "cross-env-shell \"shx rm -rf $npm_package_DIR_project/$npm_package_DIR_work\"",
    "g-mkdirs": "npm-run-all g-mk-*",
    "g-mk-css": "cross-env-shell \"shx mkdir -p $npm_package_DIR_project/$npm_package_DIR_work/$npm_package_DIR_css\"",
    "g-mk-raw": "cross-env-shell \"shx mkdir -p $npm_package_DIR_project/$npm_package_DIR_work/$npm_package_DIR_raw\"",
    "g-mk-dist": "cross-env-shell \"shx mkdir -p $npm_package_DIR_project/$npm_package_DIR_work/$npm_package_DIR_dist\"",
    "g-compile": "node-sass --output-style expanded --source-map true --source-map-contents true --precision 6 $npm_package_DIR_scss/ -o $npm_package_DIR_project/$npm_package_DIR_work/$npm_package_DIR_css",
    "g-copyRaw": "cross-env-shell shx cp $npm_package_DIR_project/$npm_package_DIR_work/$npm_package_DIR_css/*.{css,map} $npm_package_DIR_project/$npm_package_DIR_work/$npm_package_DIR_raw",
    "g-prefix": "postcss --config build/postcss.config.js --replace \"$npm_package_DIR_project/$npm_package_DIR_work/$npm_package_DIR_css/*.css\" \"!$npm_package_DIR_project/$npm_package_DIR_work/$npm_package_DIR_css/*.min.css\"",
    "g-minify": "bin/minify.php",
    "g-version": "bin/writeVersion.php",
    "g-copyDist": "cross-env-shell shx cp -rf $npm_package_DIR_project/$npm_package_DIR_work/{$npm_package_DIR_css,$npm_package_DIR_raw} $npm_package_DIR_project/$npm_package_DIR_work/$npm_package_DIR_dist",
    "g-copyTarget": "cross-env-shell shx cp -rf $npm_package_DIR_project/$npm_package_DIR_work/$npm_package_DIR_dist/* $npm_package_DIR_target",
    "g-upload": "bin/FTPRecursiveFolderUpload.php"
  },
  "scriptsHelp": {
    "g-help": "Displays an overview of (nearly all) possible `npm run [SCRIPTKEY]` commands.",
    "g-help-real-paths": "Like `g-help` but replaces path variables with values like configured in `DIR` block in `package.json`. Perhaps good to check the current path configuration.",
    "g-all-local": "Runs a complete job but **only inside local dir** `$npm_package_DIR_project/$npm_package_DIR_work`. No transfer to `$npm_package_DIR_target`. No FTP upload. First deletes local work directory `$npm_package_DIR_work` of current project.",
    "g-all": "Runs a complete job inclusive transfer to `$npm_package_DIR_target`. **No FTP upload**. First deletes local work directory `$npm_package_DIR_work` of current project.",
    "g-all-upload": "Like `g-all` **plus FTP upload**. NEEDS A CORRECTLY CONFIGURED `$npm_package_DIR_project/ftp-credentials.json`! Check twice and test before using it. First deletes local work directory `$npm_package_DIR_work` of current project.",
    "g-rm": "Deletes **local** work directory `$npm_package_DIR_work` of current project.",
    "g-mkdirs": "Runs all jobs that match `g-mk-*`. Creates basic work folder structure of current project in `$npm_package_DIR_project`.",
    "g-compile": "Compiles *.scss files from `$npm_package_DIR_scss` to `*.css` and `*.css.map` files in local work dir `$npm_package_DIR_work/$npm_package_DIR_css` of current project.",
    "g-copyRaw": "Copies unprefixed `*.css` and `*.css.map` to local dir `$npm_package_DIR_work/$npm_package_DIR_raw` inside current project folder.",
    "g-prefix": "Runs `Autoprefixer` (See file `.browserslistrc`). \n- Source: All `*.css` files in **local** work dir `$npm_package_DIR_work/$npm_package_DIR_css` inside current project folder. \n- Target: Replaces `*.css` files in same dir.",
    "g-minify": "Minifies all `*.css` files and creates additional `*.min.css` files in **local** folders `$npm_package_DIR_work/$npm_package_DIR_raw` and `$npm_package_DIR_work/$npm_package_DIR_raw` inside current project folder.",
    "g-version": "Adds datetime stamp files `version.txt`.",
    "g-copyDist": "Copies results of finished jobs to local folder `$npm_package_DIR_work/$npm_package_DIR_dist` inside current procect folder. More precisely: copies folders `$npm_package_DIR_css` and `$npm_package_DIR_raw`.",
    "g-copyTarget": "Copies **content** of `$npm_package_DIR_work/$npm_package_DIR_dist` to target folder `$npm_package_DIR_target`. More precisely: copies folders `$npm_package_DIR_css` and `$npm_package_DIR_raw`. No harm if they already exist. Existing folders and files stay alive. Only relevant files will be replaced.",
    "g-upload": "Runs the upload via FTP of all files/dirs inside dir `$npm_package_DIR_work/$npm_package_DIR_dist` inside current project folder. NEEDS A CORRECTLY CONFIGURED `$npm_package_DIR_project/ftp-credentials.json`! Check twice and test before using it. No harm if folders/files already exist. Existing folders and files stay alive. Only relevant files will be replaced.",
    "g-watch-local": "Starts a `nodemon` watcher for changes in scss directory `$npm_package_DIR_scss` that starts a complete, new compilation via `npm run g-all-local` when a scss file is changed. !Also starts a complete, new compilation when the watcher is started!",
    "g-watch": "Starts a `nodemon` watcher for changes in scss directory `$npm_package_DIR_scss` that starts a complete, new compilation via `npm run g-all` when a scss file is changed. !Also starts a complete, new compilation when the watcher is started!",
    "g-watch-upload": "Like `ghs-watch` **plus FTP-Upload**. NEEDS A CORRECTLY CONFIGURED `$npm_package_DIR_project/ftp-credentials.json`! Check twice and test before using it. !Also starts a complete, new compilation and FTP upload when the watcher is started!",
    "g-npm-update-check": "Check for updates of packages in `package.json`. Prints a list, not more.",
    "g-ncu-override-json": "Check for updates for packages in `package.json`. AND override `package.json` file (newest stable versions). Don't forget to run `npm install` afterwards!"
  },
  "license": "MIT",
  "dependencies": {},
  "peerDependencies": {},
  "devDependencies": {
    "autoprefixer": "^9.7.4",
    "clean-css-cli": "^4.3.0",
    "cross-env": "^6.0.3",
    "dateformat": "^3.0.3",
    "find-unused-sass-variables": "^1.0.4",
    "fs": "0.0.1-security",
    "fs-extra": "^8.1.0",
    "node-sass": "^4.13.0",
    "nodemon": "^2.0.2",
    "npm-check-updates": "^4.0.1",
    "npm-run-all": "^4.1.5",
    "postcss-cli": "^7.1.0",
    "shx": "^0.3.2"
  },
  "engines": {
    "node": ">=10"
  }
}