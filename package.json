{
  "name": "sass_compile_prefixghsvs",
  "description": "Kompilieren und autoprefixen von scss in Template. Multiprojekt-Version.",
  "version": "2020.01.12",
  "Console start": "cd /mnt/z/git-kram/sass_compile_prefixghsvs",
  "versionTxt": "2020-01-13T00:18:32+0100",
  "DIR": {
    "scss": "/mnt/z/_jobs/leder.mariabander.de/templates/lederhofmann/scss",
    "target": "/mnt/z/_jobs/leder.mariabander.de/templates/lederhofmann",
    "project": "/mnt/z/git-kram/sass_compile_prefixghsvs/leder-hofmann.de",
    "projectName": "leder-hofmann.de",
    "work": "ghs",
    "css": "css",
    "raw": "css-raw",
    "dist": "dist"
  },
  "keywords": [
    "css",
    "sass",
    "autoprefixer",
    "web"
  ],
  "homepage": "https://www.ghsvs.de/",
  "author": "G@HService Berlin Neukölln, Volkmar Volli Schlothauer (ghsvs.de)",
  "contributors": [
    "G@HService Berlin Neukölln, Volkmar Volli Schlothauer (ghsvs.de)"
  ],
  "scripts": {
    "g-help": "bin/help.php",
    "g-help-real-paths": "bin/help.php -r",
    "g-npm-update-check": "ncu",
    "g-ncu-override-json": "ncu -u",
    "g-watch": "nodemon --watch $npm_package_DIR_scss/ --ext scss --exec \"npm run g-all\"",
    "g-watch-upload": "nodemon --watch $npm_package_DIR_scss/ --ext scss --exec \"npm run g-all-upload\"",
    "g-all-local": "npm-run-all g-rm g-mkdirs g-compile g-copyRaw g-prefix g-minify g-version g-copyDist",
    "g-all": "npm-run-all g-all-local g-copyTarget",
    "g-all-upload": "npm-run-all g-all g-upload",
    "g-rm": "cross-env-shell \"shx rm -rf $npm_package_DIR_project/$npm_package_DIR_work\"",
    "g-mkdirs": "npm-run-all g-mk-*",
    "g-mk-css": "cross-env-shell \"shx mkdir -p $npm_package_DIR_project/$npm_package_DIR_work/$npm_package_DIR_css\"",
    "g-mk-raw": "cross-env-shell \"shx mkdir -p $npm_package_DIR_project/$npm_package_DIR_work/$npm_package_DIR_raw\"",
    "g-mk-dist": "cross-env-shell \"shx mkdir -p $npm_package_DIR_project/$npm_package_DIR_work/$npm_package_DIR_dist\"",
    "g-compile": "node-sass --output-style expanded --source-map true --source-map-contents true --precision 6 $npm_package_DIR_scss/ -o $npm_package_DIR_project/$npm_package_DIR_work/$npm_package_DIR_css",
    "g-copyRaw": "cross-env-shell shx cp $npm_package_DIR_project/$npm_package_DIR_work/$npm_package_DIR_css/*.{css,map} $npm_package_DIR_project/$npm_package_DIR_work/$npm_package_DIR_raw",
    "g-prefix": "postcss --config build/postcss.config.js --replace \"$npm_package_DIR_project/$npm_package_DIR_work/$npm_package_DIR_css/*.css\" \"!$npm_package_DIR_project/$npm_package_DIR_work/$npm_package_DIR_css/*.min.css\"",
    "g-minify": "bin/minify.php",
    "g-version": "bin/writeVersion.php",
    "g-copyDist": "cross-env-shell shx cp -rf $npm_package_DIR_project/$npm_package_DIR_work/{$npm_package_DIR_css,$npm_package_DIR_raw} $npm_package_DIR_project/$npm_package_DIR_work/$npm_package_DIR_dist",
    "g-copyTarget": "cross-env-shell shx cp -rf $npm_package_DIR_project/$npm_package_DIR_work/$npm_package_DIR_dist/* $npm_package_DIR_target",
    "g-upload": "bin/FTPRecursiveFolderUpload.php"
  },
  "scriptsHelp": {
    "g-help": "Displays an overview of (nearly all) possible `npm run [SCRIPTKEY]` commands.",
    "ghs-help-real-paths": "Like `ghs-help` but replaces path variables with values like configured in `DIR` block in `package.json`.",
    "ghs-npm-update-check": "Check for updates for packages in `package.json`. Prints a list, not more.",
    "ghs-ncu-override-json": "Check for updates for packages in `package.json`. AND override `package.json` file (newest stable versions). Don't forget to run npm install!",
    "ghs-watch": "Starts a `nodemon` watcher for changes in scss directory `$npm_package_DIR_scss` that starts a complete, new compilation via `npm run ghs-all` when a scss file is changed. Also starts a complete, new compilation if the watcher is started.",
    "ghs-watch-upload": "Like `ghs-watch` **plus FTP-Upload**. NEEDS A CORRECTLY CONFIGURED `ftp-credentials.json`! Check twice and test before using it.",
    "ghs-all": "Runs a complete job **without FTP upload**: `ghs-rm ghs-mkdir ghs-compile ghs-copy-raw ghs-prefix ghs-minify ghs-produktiv ghs-ftp`",
    "ghs-all-upload": "Like `ghs-all` **plus FTP upload**. NEEDS A CORRECTLY CONFIGURED `ftp-credentials.json`! Check twice and test before using it.",
    "ghs-all-local": "Nearly like `ghs-all` but **only files creation in local work dir** `$npm_package_DIR_work` and subfolders. No transfer to `$npm_package_DIR_target/*`. No FTP upload.",
    "ghs-rm": "Deletes **local** work directory `$npm_package_DIR_work` completely.",
    "ghs-mkdir": "Creates **local** work directories `$npm_package_DIR_work/$npm_package_DIR_raw`.",
    "ghs-compile": "Compiles *.scss files from `$npm_package_DIR_scss` to *.css files in **local** work dir `$npm_package_DIR_work`.",
    "ghs-copy-raw": "Copies *.css and *.css.map to local dir `$npm_package_DIR_work/$npm_package_DIR_raw`.",
    "ghs-prefix": "Runs Autoprefixer (See file `.browserslistrc`). \n- Source: All *.css files in **local** work dir `$npm_package_DIR_work`. \n- Target: Replaces *.css files in same dir.",
    "ghs-minify": "Minifies all *.css files and adds *.min.css files in **local** `$npm_package_DIR_work` and `$npm_package_DIR_work/$npm_package_DIR_raw`.",
    "ghs-produktiv": "Runs several npm scripts that match `ghs-produktiv-*`.",
    "ghs-produktiv-mkdir": "Creates TARGET dirs `$npm_package_DIR_target/$npm_package_DIR_css` and `$npm_package_DIR_target/$npm_package_DIR_raw` and `version.txt` files (datetime). No harm if they already exist. Existing folders and files stay alive.",
    "ghs-produktiv-copy": "Copies all prefixed *.css and *.map to  TARGET dir `$npm_package_DIR_target/$npm_package_DIR_css`.",
    "ghs-produktiv-copyRaw": "Copies all NON-prefixed *.css and *.map to TARGET dir `$npm_package_DIR_target/$npm_package_DIR_raw`.",
    "ghs-ftp": "Runs several npm scripts that match `ghs-ftp-*`. to **prepare** **locally** the upload of files via FTP. **Runs no FTP upload.**",
    "ghs-ftp-mkdir": "Creates local dirs `$npm_package_DIR_work/$npm_package_DIR_dist/$npm_package_DIR_css` and `$npm_package_DIR_work/$npm_package_DIR_dist/$npm_package_DIR_raw` and subfolders with `version.txt` files (datetime). No harm if they already exist. Existing folders and files stay alive.",
    "ghs-ftp-copy": "Copies all prefixed *.css and *.map to local `$npm_package_DIR_work/$npm_package_DIR_dist/$npm_package_DIR_css`.",
    "ghs-ftp-copyRaw": "Copies all NON-prefixed *.css and *.map to local `$npm_package_DIR_work/$npm_package_DIR_dist/$npm_package_DIR_raw`.",
    "ghs-upload": "Runs the upload of all files/dirs via FTP inside dir `$npm_package_DIR_work/$npm_package_DIR_dist`. NEEDS A CORRECTLY CONFIGURED `ftp-credentials.json`! Check twice and test before using it."
  },
  "license": "MIT",
  "dependencies": {},
  "peerDependencies": {},
  "devDependencies": {
    "autoprefixer": "^9.7.3",
    "clean-css-cli": "^4.3.0",
    "cross-env": "^6.0.3",
    "dateformat": "^3.0.3",
    "find-unused-sass-variables": "^1.0.4",
    "fs": "0.0.1-security",
    "fs-extra": "^8.1.0",
    "node-sass": "^4.13.0",
    "nodemon": "^2.0.2",
    "npm-check-updates": "^4.0.1",
    "npm-run-all": "^4.1.5",
    "postcss-cli": "^7.1.0",
    "shx": "^0.3.2"
  },
  "engines": {
    "node": ">=10"
  }
}